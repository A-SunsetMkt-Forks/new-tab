/**
* Themes
*/

// Dark theme (default)
:root {
  --s: 0 2px 4px rgba(0, 0, 17, 0.15); // shadow
  --b: #23252d; // background colour
  --t: #9da5b4; // text colour
  --c1: #2c313a; // bookmark item hover background, hr
  --c2: #292d35; // bookmarks bar, menu dropdown, load more button
  --c3: #383e4a; // icons, h2, muted text
}

// Light theme
.l {
  --b: #fafafa; // background colour
  --t: #383a42; // text colour
  --c1: #e5e5e6; // bookmark item hover background, hr
  --c2: #fff; // bookmarks bar, menu dropdown, load more button
  --c3: #dbdbdc; // icons, h2, muted text
}

// Rich black theme
.b {
  --s: 0 1px #201313; // shadow
  --b: #0a0000; // background colour
  --t: #795548; // text colour
  --c1: #1d1616; // bookmark item hover background, hr
  --c2: #0f0b0b; // bookmarks bar, menu dropdown, load more button
  --c3: #392d2d; // icons, h2, muted text
}

/**
* App styles
*/

body {
  margin: 108px 0;
  overflow-y: scroll; /* Prevent jump on load */
  font-size: 18px;
  /**
   * Although it's best practise to use a unitless value for line-height, this
   * is a hack for alignment with the minimum possible style properties. Must be
   * the same as as bookmark bar height.
   */
  line-height: 42px;
  text-rendering: optimizeSpeed;
  // font-variant-ligatures: none;
  // background-color: var(--b);
  background: var(--b);
}

h2,
.muted {
  color: var(--c3);
}

a {
  text-decoration: none;

  &:hover,
  &:focus {
    text-decoration: underline;
  }
}

/* All <img> are favicons */
img {
  width: 16px;
  height: 16px; /* Prevents slight realignment jump on initial load */
  margin: 0 10px 0 0;
}

a,
.item {
  display: block;
  color: var(--t);
  white-space: nowrap;
  cursor: pointer;
}

svg {
  fill: none;
  stroke: currentColor;
  stroke-width: 2px;
  stroke-linecap: round;
}

.container {
  position: relative;
  max-width: 800px;
  margin: 0 auto;
  padding: 0 18px;
}

button,
#search {
  box-sizing: border-box;
  width: 100%;
  margin: 0 0 35px;
  padding: 11px 20px 11px 58px;
  color: var(--t);
  font-size: 21px;
  background: inherit;
  border: 2px solid var(--c1);
  border-radius: 24px;
  outline: none;

  &:hover,
  &:focus {
    border-color: var(--c3);
  }
}

/* "Load more" buttons */
button {
  width: initial;
  margin-top: 9px;
  padding: 11px 20px;
  cursor: pointer;
}

.s-icon,
.icon {
  width: 24px;
  color: var(--c3);
}

.s-icon {
  position: absolute;
  left: 38px;
  top: 14px;
}

.bookmarks {
  position: fixed;
  top: 0;
  right: 0;
  left: 0;
  z-index: 2;
  display: flex;
  // FIXME: We want this kind of behaviour but to push overflowing items into a separate magically overflow folder
  flex-wrap: wrap;
  height: 42px;
  background: var(--c2);
  box-shadow: var(--s);
  contain: size;
  backface-visibility: hidden; /* performance hack; force GPU */

  a,
  .item {
    padding: 0 13px;

    &:hover,
    &:focus {
      background-color: var(--c1);
    }
  }

  a {
    max-width: 16ch;
    overflow: hidden;
    text-overflow: ellipsis;
  }
}

.container a {
  overflow: hidden;
  text-overflow: ellipsis;
}

.subfolder a {
  min-width: 200px;
  max-width: 38ch;
}

// FIXME: Show this in the folder component
.caret {
  float: right;
  margin-left: auto;
  padding: 0 6px;
}

.subfolder {
  position: fixed;
  background: var(--c2);
  box-shadow: var(--s);
  overflow-y: auto;
  // FIXME: Height needs to be calculated depending on the folder top position
  max-height: calc(100vh - 42px);
}

// /* Bookmark item pushed to the right */
// .right {
//   width: 100%;
//   text-align: right;

//   & + & {
//     width: auto;
//   }
// }

// /* Folder which opens to the left */
// .left {
//   right: 0;
//   left: initial;
//   text-align: left;

//   .subfolder {
//     right: 100%;
//     left: initial;
//   }
// }

.right {
  margin-left: auto;
}

/* Menu */

hr {
  border: 0;
  border-bottom: 1px solid var(--c1);
}

#menu {
  position: fixed;
  top: 90px;
  margin: -28px -84px -64px 0;
  padding: 10px 84px 84px 42px;
  font-size: 20px;
}

#dropdown {
  position: absolute;
  top: 10px;
  z-index: 1;
  padding: 18px;
  white-space: nowrap;
  background: var(--c2);
  box-shadow: var(--s);
  opacity: 0;
  transition: opacity 160ms ease-out, transform 160ms ease-out;
  transform: scale(0.8);
  transform-origin: 0 10px;

  #menu:hover > &,
  #menu:focus > & {
    opacity: 1;
    transition-duration: 192ms;
    transform: scale(1);
  }
}
