import { onClick } from '../helpers';

class {
  onCreate() {
    this.state = {
      __trackErrors: true,
    }

    // check for error tracking opt-out
    chrome.storage.local.get('e', (isOptOut) => {
      this.state.__trackErrors = !isOptOut.e;
    });
  }

  toggleOptOut() {
    chrome.storage.local.set({ e: this.state.__trackErrors });
    this.state.__trackErrors = !this.state.__trackErrors;
  }
}

style {
  #m { /* menu */
    position: absolute;
    display: inline-block;
    padding: 18px 84px 84px 42px;
    margin: -28px -84px -84px 0;
    font-size: 20px;

    @media (max-width: 67em) {
      position: relative;
    }
  }

  #i { /* menu icon */
    font-size: 30px;
    color: var(--c14);
  }

  #d { /* menu dropdown */
    position: absolute;
    top: 18px;
    left: 42px;
    z-index: 1;
    padding: 18px;
    white-space: nowrap;
    background: var(--c11);
    filter: drop-shadow(0 18px 18px rgba(0,0,0,.3));
    opacity: 0;
    transition: all 150ms ease-out;
    transform: scale(0.5);
    transform-origin: 0 18px;

    #m:hover > &,
    #m:focus > & {
      opacity: 1;
      transform: scale(1);
    }
  }

  .m { /* menu item */
    display: block;
    padding: 9px 0;
    color: var(--t);
  }

  hr {
    width: 100%;
    border: 0;
    border-bottom: 1px solid var(--c3);
  }
}

div#m
  div#i -- ☰

  div#d
    a.m on-click(onClick) href="chrome-search://local-ntp/local-ntp.html" -- Open Default Tab
    a.m on-click(onClick) href="chrome://bookmarks/" -- Bookmarks Manager
    a.m on-click(onClick) href="chrome://downloads/" -- Downloads
    a.m on-click(onClick) href="chrome://history/" -- History
    a.m on-click(onClick) href="chrome://settings/passwords" -- Passwords

    hr

    a.m href="#" on-click('toggleOptOut') title="Opt-out from error tracking"
      -- ${state.__trackErrors ? '✅' : '❌'} Track errors

    a.m href="https://github.com/MaxMilton/new-tab/issues" -- Submit bug
